#!/bin/sh
#
# Redis init script for Debian-based distros
#
#
### BEGIN INIT INFO
# Provides:          redis_{{ redis_port }}
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Should-Start:      $syslog $named
# Should-Stop:       $syslog $named
# Short-Description: Start and stop redis_{{ redis_port }}
# Description:       Redis key-value store
### END INIT INFO

REDIS_PORT={{ redis_port }}

if [ -r /etc/default/redis_${REDIS_PORT} ]; then
    . /etc/default/redis_${REDIS_PORT}
fi

REDIS_USER={{ redis_user }}
PIDFILE={{ redis_pidfile }}
CONF="/etc/redis/${REDIS_PORT}.conf"
EXEC={{ redis_install_dir }}/bin/redis-server
CLIEXEC={{ redis_install_dir }}/bin/redis-cli

if [ -n "$REDIS_PASSWORD" ]; then
    CLIEXEC="${CLIEXEC} -a ${REDIS_PASSWORD}"
fi

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                if [ -n "$NOFILE_LIMIT" ]; then
                    ulimit -n $NOFILE_LIMIT
                fi
                echo "Starting Redis server..."
                su $REDIS_USER -c "$EXEC $CONF"
        fi
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC -p $REDISPORT shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    restart|force-reload)
        ${0} stop
        ${0} start
        ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
